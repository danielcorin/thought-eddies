---
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  const tils = await getCollection("til");
  const projects = await getCollection("projects");
  const feeds = await getCollection("feeds");
  const paths: {
    params: { alias: string };
    props: { redirectTo: string; postTitle: string };
  }[] = [];

  // Create redirect paths for each post alias
  posts.forEach((post) => {
    if (post.data.aliases && Array.isArray(post.data.aliases)) {
      post.data.aliases.forEach((alias) => {
        // Remove leading slash if present
        const cleanAlias = alias.startsWith("/") ? alias.slice(1) : alias;
        paths.push({
          params: { alias: cleanAlias },
          props: {
            redirectTo: `/posts/${post.id}`,
            postTitle: post.data.title,
          },
        });
      });
    }
  });

  // Create redirect paths for each TIL alias
  tils.forEach((til) => {
    if (til.data.aliases && Array.isArray(til.data.aliases)) {
      til.data.aliases.forEach((alias) => {
        // Remove leading slash if present
        const cleanAlias = alias.startsWith("/") ? alias.slice(1) : alias;
        const category = til.id.split('/')[0];
        const slug = til.id.split('/').slice(1).join('/').replace(/\.(md|mdx)$/, '');
        
        paths.push({
          params: { alias: cleanAlias },
          props: {
            redirectTo: `/til/${category}/${slug}`,
            postTitle: til.data.title,
          },
        });
      });
    }
  });

  // Create redirect paths for each project alias
  projects.forEach((project) => {
    if (project.data.aliases && Array.isArray(project.data.aliases)) {
      project.data.aliases.forEach((alias) => {
        // Remove leading slash if present
        const cleanAlias = alias.startsWith("/") ? alias.slice(1) : alias;
        paths.push({
          params: { alias: cleanAlias },
          props: {
            redirectTo: `/projects/${project.id}`,
            postTitle: project.data.title,
          },
        });
      });
    }
  });

  // Create redirect paths for each feed alias
  feeds.forEach((feed) => {
    if (feed.data.aliases && Array.isArray(feed.data.aliases)) {
      feed.data.aliases.forEach((alias) => {
        // Remove leading slash if present
        const cleanAlias = alias.startsWith("/") ? alias.slice(1) : alias;
        paths.push({
          params: { alias: cleanAlias },
          props: {
            redirectTo: `/feeds/${feed.id}`,
            postTitle: feed.data.title,
          },
        });
      });
    }
  });

  return paths;
}

const { redirectTo, postTitle } = Astro.props;

// Perform redirect
return Astro.redirect(redirectTo, 301);
---

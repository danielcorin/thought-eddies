---
import Navigation from "@components/layout/Navigation.astro";
import PostCard from "@components/PostCard.astro";
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const tils = await getCollection("til");
  const publishedTils = tils.filter((til) => !til.data.draft);
  
  // Get all unique categories
  const categories = [...new Set(publishedTils.map(til => til.id.split('/')[0]))];
  
  return categories.map(category => ({
    params: { category }
  }));
}

const { category } = Astro.params;

// Get all TILs for this category
const allTils = await getCollection("til");
const categoryTils = allTils
  .filter((til) => !til.data.draft && til.id.split('/')[0] === category)
  .sort((a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf());

const ogImage = `/til/og.png`;
---

<Layout title={`TIL - ${category}`} ogImage={ogImage}>
  <Navigation selected="til" />
  <main>
    <div class="page-header">
      <h1 class="page-title">{category}</h1>
      <p class="entry-count">{categoryTils.length} {categoryTils.length === 1 ? 'entry' : 'entries'}</p>
    </div>

    <nav class="breadcrumb">
      <a href="/til">‚Üê All TILs</a>
    </nav>

    <div class="toc">
      {
        categoryTils.map((til) => (
          <PostCard post={til} variant="list" />
        ))
      }
    </div>
  </main>
</Layout>

<style>
  main {
    padding: var(--spacing-xs) 0;
    max-width: 90ch;
    margin: 0 auto var(--spacing-lg);
  }

  .page-header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
  }

  .page-title {
    font-size: var(--text-4xl);
    font-weight: 700;
    margin-bottom: var(--spacing-sm);
  }

  .entry-count {
    color: var(--color-ink-light);
    font-size: var(--text-sm);
    margin: 0;
  }

  .breadcrumb {
    margin-bottom: var(--spacing-xl);
  }

  .breadcrumb a {
    color: var(--color-accent);
    text-decoration: none;
    font-size: var(--text-sm);
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .toc {
    display: block;
  }
</style>
---
import Navigation from "@components/layout/Navigation.astro";
import Pagination from "@components/Pagination.astro";
import PostCard from "@components/PostCard.astro";
import Layout from "@layouts/Layout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const projects = await getCollection("projects");
  const sortedProjects = projects
    .filter((project) => !project.data.draft && !project.id.includes("level"))
    .sort((a, b) => {
      const dateA = (a.data.createdAt || a.data.date).valueOf();
      const dateB = (b.data.createdAt || b.data.date).valueOf();
      return dateB - dateA;
    });

  // Use Astro's paginate function - show all projects on one page
  return paginate(sortedProjects, { pageSize: 100 });
};

const { page } = Astro.props as { page: any };

const ogImage = `/projects/og.png`;
---

<Layout title="Projects" ogImage={ogImage} pageType="projects">
  <Navigation selected="projects" />
  <main>
    <h1 class="page-title">Projects</h1>

    <div class="toc">
      {
        page.data.map((project: any) => (
          <PostCard post={project} variant="list" />
        ))
      }
    </div>

    {
      page.lastPage > 1 && (
        <div class="pagination-bottom">
          <Pagination
            currentPage={page.currentPage}
            lastPage={page.lastPage}
            prevUrl={page.url.prev}
            nextUrl={page.url.next}
            baseUrl="/projects"
          />
        </div>
      )
    }
  </main>
</Layout>

<style>
  .pagination-bottom {
    margin-top: var(--spacing-xl);
  }
</style>
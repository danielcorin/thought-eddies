---
import Navigation from '@components/layout/Navigation.astro';
import Layout from '@layouts/Layout.astro';
import { Icon } from 'astro-icon/components';
import { getCollection, render } from 'astro:content';

const title = 'Feeds';
const description =
  'A collection of feeds and curated content from around the web';
const ogImage = `/og.png`;

const feedEntries = await getCollection('feeds');
const feeds = await Promise.all(
  feedEntries.map(async (entry) => {
    const { Content } = await render(entry);
    return {
      title: entry.data.title,
      description: entry.body,
      url: `/feeds/${entry.id}`,
      feedUrl: entry.data.feed_url,
      order: entry.data.order,
      Content,
    };
  })
);

// Sort feeds by order (if present), then alphabetically by title
feeds.sort((a, b) => {
  // If both have order, sort by order
  if (a.order !== undefined && b.order !== undefined) {
    return a.order - b.order;
  }
  // If only a has order, it comes first
  if (a.order !== undefined) return -1;
  // If only b has order, it comes first
  if (b.order !== undefined) return 1;
  // Neither has order, sort alphabetically
  return a.title.localeCompare(b.title);
});
---

<Layout title={title} ogImage={ogImage} pageType="feeds">
  <Navigation selected="feeds" />
  <main>
    <h1 class="page-title">{title}</h1>

    <div class="toc">
      {
        feeds.map((feed) => (
          <article class="entry">
            <div class="entry-content">
              <h2>
                <a href={feed.url}>{feed.title}</a>
              </h2>
              <p class="entry-description">{feed.description}</p>
              <div class="entry-footer">
                <div />
                <a href={feed.url} class="read-more">
                  View feed â†’
                </a>
              </div>
            </div>
          </article>
        ))
      }
    </div>
  </main>
</Layout>

<style>
  .entry {
    display: block;
    padding: var(--spacing-lg) var(--spacing-xl);
    background: var(--color-bg-code);
    border-radius: 0.5rem;
    margin-bottom: var(--spacing-lg);
  }

  .entry-content {
    margin-left: 0;
  }

  .entry-content h2 {
    margin: 0 0 var(--spacing-md);
    font-size: var(--text-2xl);
    line-height: 1.3;
  }

  .entry-content h2 a {
    color: var(--color-ink);
    text-decoration: none;
    transition: opacity 0.2s;
  }

  .entry-content h2 a:hover {
    opacity: 0.8;
    color: var(--color-accent);
  }

  .entry-description {
    margin: 0 0 var(--spacing-md);
    font-size: var(--text-base);
    line-height: 1.7;
    color: var(--color-ink-light);
  }

  .entry-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--spacing-md);
    margin-top: var(--spacing-md);
  }

  .read-more {
    font-size: var(--text-sm);
    color: var(--color-accent);
    text-decoration: none;
    white-space: nowrap;
  }

  .read-more:hover {
    text-decoration: underline;
  }

  @media (max-width: 640px) {
    .entry {
      padding: var(--spacing-md);
    }

    .entry-content h2 {
      font-size: var(--text-xl);
    }

    .entry-description {
      font-size: var(--text-sm);
    }

    .entry-footer {
      flex-wrap: wrap;
    }
  }
</style>

---
import { getContentPreview } from "@utils/text";
import type { CollectionEntry } from "astro:content";

export interface Props {
    content: (CollectionEntry<"posts"> | CollectionEntry<"til">)[];
}

const { content } = Astro.props;

// Helper function to get URL for content
function getContentUrl(item: CollectionEntry<"posts"> | CollectionEntry<"til">) {
    if (item.collection === "til") {
        const [category, ...slugParts] = item.id.split('/');
        const slug = slugParts.join('/').replace(/\.(md|mdx)$/, '');
        return `/til/${category}/${slug}?ref=recommended`;
    }
    return `/posts/${item.id}?ref=recommended`;
}
---

{
    content.length > 0 && (
        <section class="recommended-content">
            <h2>Recommended</h2>
            <div class="recommended-list">
                {content.map((item) => {
                    const preview =
                        ('description' in item.data && item.data.description) ||
                        getContentPreview(item.body || "", 150);
                    const url = getContentUrl(item);
                    return (
                        <div class="recommended-item">
                            <h3>
                                <a href={url}>
                                    {item.data.title}
                                </a>
                            </h3>
                            <p class="recommended-excerpt">{preview}</p>
                        </div>
                    );
                })}
            </div>
        </section>
    )
}

<style>
    .recommended-content {
        margin-top: calc(var(--spacing-xl) * 2);
        padding-top: 0;
    }

    .recommended-content h2 {
        font-size: var(--text-lg);
        margin-bottom: var(--spacing-lg);
        color: var(--color-ink);
        font-weight: 600;
    }

    .recommended-list {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-lg);
    }

    .recommended-item h3 {
        font-family: var(--font-primary);
        font-size: var(--text-base);
        font-weight: 600;
        margin-bottom: var(--spacing-xs);
    }

    .recommended-item h3 a {
        color: var(--color-ink);
        text-decoration: none;
        transition: color 0.2s;
    }

    .recommended-item h3 a:hover {
        color: var(--color-accent);
        text-decoration: underline;
    }

    .recommended-excerpt {
        font-size: var(--text-sm);
        color: var(--color-ink-light);
        line-height: 1.6;
        margin: 0;
    }

    @media (max-width: 768px) {
        .recommended-content {
            margin-top: var(--spacing-xl);
            padding-top: var(--spacing-xl);
        }
    }
</style>
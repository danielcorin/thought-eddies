---
import Tag from "@components/Tag.astro";
import TypeLabel from "@components/TypeLabel.astro";
import { getContentPreview } from "@utils/text";
import type { CollectionEntry } from "astro:content";

export interface Props {
    post: CollectionEntry<"posts"> | CollectionEntry<"logs"> | CollectionEntry<"til">;
    type?: "post" | "log" | "til";
    variant?: "list" | "grid";
    showTypeLabel?: boolean;
    baseUrl?: string;
}

const {
    post,
    type = post.collection === "til" ? "til" : post.collection === "logs" ? "log" : "post",
    variant = "list",
    showTypeLabel = false,
    baseUrl,
} = Astro.props;

// Get date based on type
const date = new Date(
    type === "log"
        ? (post.data as any).date
        : (post.data as any).publishedAt || (post.data as any).createdAt,
);

// Format date components
const year = date.getFullYear();
const month = String(date.getMonth() + 1).padStart(2, "0");
const day = String(date.getDate()).padStart(2, "0");

// Build URL and formatted date
let url: string;
if (type === "log") {
    url = `/logs/${year}/${month}/${day}`;
} else if (post.collection === "til") {
    const category = post.id.split('/')[0];
    const slug = post.id.split('/').slice(1).join('/').replace(/\.(md|mdx)$/, '');
    url = `/til/${category}/${slug}`;
} else if (baseUrl) {
    url = `${baseUrl}/${post.id}`;
} else {
    url = `/posts/${post.id}`;
}

const formattedDate = `${year}-${month}-${day}`;
const contentPreview = getContentPreview(post.body || "");
const tags = post.data.tags || [];

// Get category for TIL posts
const category = post.collection === "til" && (post.data as any).category ? (post.data as any).category : null;
---

<article class={variant === "list" ? "entry" : "post-card"}>
    <div class={variant === "list" ? "entry-header" : "post-header"}>
        <time class={variant === "list" ? "entry-date-mono" : "post-date"}>
            <a href={url}>{formattedDate}</a>
        </time>
        {showTypeLabel && <TypeLabel type={type} />}
        {category && post.collection === "til" && (
            <span class="category-label">
                <a href={`/til/${post.id.split('/')[0]}`}>{post.id.split('/')[0]}</a>
            </span>
        )}
    </div>

    <div class={variant === "list" ? "entry-content" : ""}>
        <h2 class={variant === "grid" ? "post-title" : ""}>
            <a href={url}>{post.data.title}</a>
        </h2>

        {
            "description" in post.data && (
                <p
                    class={
                        variant === "list"
                            ? "entry-description"
                            : "post-description"
                    }
                >
                    {post.data.description}
                </p>
            )
        }

        <p class={variant === "list" ? "entry-preview" : "post-preview"}>
            {contentPreview}
        </p>

        <div class={variant === "list" ? "entry-footer" : "post-footer"}>
            <div class="tags">
                {tags.map((tag: string) => <Tag tag={tag} />)}
            </div>
            <a href={url} class="read-more">Read more â†’</a>
        </div>
    </div>
</article>

<style>
    /* List variant styles */
    .entry {
        display: block;
        padding: var(--spacing-lg) var(--spacing-xl);
        background: var(--color-bg-code);
        border-radius: 0.5rem;
        margin-bottom: var(--spacing-lg);
    }

    .entry-header {
        margin-bottom: var(--spacing-md);
        display: flex;
        align-items: center;
        gap: var(--spacing-md);
    }

    .entry-date-mono,
    .post-date {
        font-family: var(--font-mono);
        font-size: var(--text-sm);
    }

    .entry-date-mono a,
    .post-date a {
        color: var(--color-ink-light);
        text-decoration: none;
        transition: opacity 0.2s;
    }

    .entry-date-mono a:hover,
    .post-date a:hover {
        opacity: 0.8;
        color: var(--color-accent);
    }

    .entry-content {
        margin-left: 0;
    }

    .entry-content h2,
    .post-title {
        margin: 0 0 var(--spacing-md);
        font-size: var(--text-2xl);
        line-height: 1.3;
    }

    .entry-content h2 a,
    .post-title a {
        color: var(--color-ink);
        text-decoration: none;
        transition: opacity 0.2s;
    }

    .entry-content h2 a:hover,
    .post-title a:hover {
        opacity: 0.8;
        color: var(--color-accent);
    }

    .entry-description,
    .post-description {
        margin: 0 0 var(--spacing-md);
        font-size: var(--text-lg);
        line-height: 1.6;
        color: var(--color-ink);
        font-weight: 500;
    }

    .entry-preview,
    .post-preview {
        margin: 0 0 var(--spacing-md);
        font-size: var(--text-base);
        line-height: 1.7;
        color: var(--color-ink-light);
    }

    .entry-footer,
    .post-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: var(--spacing-md);
        margin-top: var(--spacing-md);
    }

    .read-more {
        font-size: var(--text-sm);
        color: var(--color-accent);
        text-decoration: none;
        white-space: nowrap;
    }

    .read-more:hover {
        text-decoration: underline;
    }

    /* Grid variant styles */
    .post-card {
        background: var(--color-bg-code);
        border-radius: 0.5rem;
        overflow: hidden;
        padding: var(--spacing-lg);
    }

    .post-header {
        margin-bottom: var(--spacing-md);
        display: flex;
        align-items: center;
        gap: var(--spacing-md);
    }

    .tags {
        display: flex;
        gap: var(--spacing-sm);
        flex-wrap: wrap;
    }

    @media (max-width: 640px) {
        .entry {
            padding: var(--spacing-md);
        }

        .entry-content h2 {
            font-size: var(--text-xl);
        }

        .entry-description {
            font-size: var(--text-base);
        }

        .entry-footer {
            flex-wrap: wrap;
        }
    }

    @media (max-width: 768px) {
        .post-card {
            padding: var(--spacing-md);
        }

        .post-title {
            font-size: var(--text-xl);
        }

        .post-description {
            font-size: var(--text-base);
        }
    }

    .category-label {
        font-family: var(--font-mono);
        font-size: var(--text-sm);
    }

    .category-label a {
        color: var(--color-accent);
        text-decoration: none;
        padding: 0.125rem 0.5rem;
        background: var(--color-bg);
        border: 1px solid var(--color-accent);
        border-radius: 0.25rem;
        transition: all 0.2s;
    }

    .category-label a:hover {
        background: var(--color-accent);
        color: var(--color-bg);
    }
</style>

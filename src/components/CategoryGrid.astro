---
export interface Props {
  items: Array<{ name: string; count: number }>;
  baseUrl: string;
  title?: string;
}

const { items, baseUrl, title } = Astro.props;
---

<div class="categories">
  {title && <h3>{title}</h3>}
  <div class="category-list">
    {items.map((item) => (
      <a href={`${baseUrl}/${encodeURIComponent(item.name)}`} class="category-link">
        <span class="category-name">{item.name}</span>
        <span class="category-count">{item.count}</span>
      </a>
    ))}
  </div>
</div>

<style>
  .categories {
    margin-bottom: var(--spacing-xl);
    padding: var(--spacing-lg);
    background: var(--color-bg-code);
    border-radius: 0.5rem;
  }

  .categories h3 {
    margin-bottom: var(--spacing-md);
    font-size: var(--text-lg);
  }

  .category-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-sm);
  }

  .category-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.25rem 0.75rem;
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: 0.25rem;
    text-decoration: none;
    color: var(--color-ink);
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    transition: all 0.2s;
  }

  .category-link:hover {
    border-color: var(--color-accent);
    color: var(--color-accent);
  }

  .category-count {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 1.5rem;
    height: 1.5rem;
    padding: 0 0.375rem;
    background: var(--color-bg-code);
    border-radius: 9999px;
    font-size: var(--text-xs);
    font-weight: 500;
    color: var(--color-ink-light);
  }

  .category-link:hover .category-count {
    background: var(--color-accent);
    color: var(--color-bg);
  }
</style>
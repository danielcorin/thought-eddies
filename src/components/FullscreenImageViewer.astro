<div id="fullscreen-image-viewer" class="image-modal-wrapper" style="display: none;">
  <div class="image-modal-backdrop"></div>
  <div class="image-modal-container">
    <button
      id="close-fullscreen-btn"
      class="image-modal-close"
      aria-label="Close fullscreen image"
    >
      Ã—
    </button>
    <img
      id="fullscreen-image"
      alt=""
      class="image-modal-content"
    />
  </div>
</div>

<script>
  const viewer = document.getElementById('fullscreen-image-viewer');
  const image = document.getElementById('fullscreen-image') as HTMLImageElement;
  const closeBtn = document.getElementById('close-fullscreen-btn');

  function openFullscreen(src: string, alt: string) {
    if (!viewer || !image) return;
    
    image.src = src;
    image.alt = alt;
    viewer.style.display = 'block';
    document.body.style.overflow = 'hidden';
  }

  function closeFullscreen() {
    if (!viewer) return;
    
    viewer.style.display = 'none';
    document.body.style.overflow = '';
  }

  function handleEscape(e: KeyboardEvent) {
    if (e.key === 'Escape') {
      closeFullscreen();
    }
  }

  // Close on container click (but not on image)
  const container = viewer?.querySelector('.image-modal-container');
  container?.addEventListener('click', (e) => {
    if (e.target === container) {
      closeFullscreen();
    }
  });

  // Close on X button click
  closeBtn?.addEventListener('click', closeFullscreen);

  // Close on escape key
  document.addEventListener('keydown', handleEscape);

  // Prevent image click from closing
  image?.addEventListener('click', (e) => {
    e.stopPropagation();
  });

  // Export function to global scope so other components can use it
  (window as any).openFullscreenImage = openFullscreen;
</script>

<style>
  .image-modal-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1001;
  }

  .image-modal-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    animation: fadeIn 0.2s ease-out;
  }

  .image-modal-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    z-index: 1002;
  }

  .image-modal-content {
    max-width: 90vw;
    max-height: 90vh;
    object-fit: contain;
    border-radius: 8px;
    animation: slideIn 0.3s ease-out;
  }

  .image-modal-close {
    position: absolute;
    top: 2rem;
    right: 2rem;
    z-index: 1003;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #333;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.2s;
    font-weight: normal;
    line-height: 1;
    padding: 0;
    padding-bottom: 2px;
  }

  .image-modal-close:hover {
    background: rgba(255, 255, 255, 1);
    transform: scale(1.1);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @media (max-width: 640px) {
    .image-modal-container {
      padding: 1rem;
    }

    .image-modal-close {
      top: 1rem;
      right: 1rem;
      width: 32px;
      height: 32px;
      font-size: 1.25rem;
    }
  }

  :global(.dark) .image-modal-backdrop {
    background: rgba(0, 0, 0, 0.85);
  }

  :global(.dark) .image-modal-close {
    background: rgba(40, 40, 40, 0.9);
    color: #ddd;
  }

  :global(.dark) .image-modal-close:hover {
    background: rgba(40, 40, 40, 1);
  }
</style>

---
import "@styles/base.css";
import { Icon } from "astro-icon/components";

interface Props {
    selected?: string;
}

const { selected } = Astro.props;
---

<script>
    const themeToggle = document.getElementById("theme-toggle");
    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)");
    const sunIcon = themeToggle?.querySelector(".sun-wrapper");
    const moonIcon = themeToggle?.querySelector(".moon-wrapper");

    // Initial state based on system preference
    if (prefersDark.matches) {
        document.body.classList.remove("light");
        sunIcon?.classList.add("hidden");
        moonIcon?.classList.remove("hidden");
    } else {
        document.body.classList.add("light");
        sunIcon?.classList.remove("hidden");
        moonIcon?.classList.add("hidden");
    }

    // Handle system preference changes
    prefersDark.addEventListener("change", (e) => {
        if (e.matches) {
            document.body.classList.remove("light");
            sunIcon?.classList.add("hidden");
            moonIcon?.classList.remove("hidden");
        } else {
            document.body.classList.add("light");
            sunIcon?.classList.remove("hidden");
            moonIcon?.classList.add("hidden");
        }
    });

    // Handle manual toggle
    themeToggle?.addEventListener("click", () => {
        const isLight = document.body.classList.toggle("light");
        sunIcon?.classList.toggle("hidden", !isLight);
        moonIcon?.classList.toggle("hidden", isLight);
    });
</script>

<nav class="site-nav">
    {
        ["", "notes"].map((item) => (
            <a
                href={`/${item === "" ? "" : item}`}
                class={
                    selected === item || (item === "" && selected === "home")
                        ? "nav-link selected"
                        : "nav-link"
                }
            >
                <span class="nav-item">
                    <Icon
                        name={`ph:${item === "" ? "house" : item === "posts" ? "book-open" : "note"}`}
                        class="inline-icon"
                    />
                    <span class="nav-text">
                        {item === ""
                            ? "Home"
                            : item.charAt(0).toUpperCase() + item.slice(1)}
                    </span>
                </span>
            </a>
        ))
    }
    <button id="theme-toggle" class="nav-link ml-auto">
        <span class="nav-item">
            <span class="sun-wrapper">
                <Icon name="ph:sun" class="inline-icon" />
            </span>
            <span class="moon-wrapper hidden">
                <Icon name="ph:moon" class="inline-icon" />
            </span>
        </span>
    </button>
</nav>

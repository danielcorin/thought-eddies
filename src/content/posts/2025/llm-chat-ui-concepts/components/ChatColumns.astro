---
import { Markdown } from "@astropub/md";

interface ContentItem {
  type: "text" | "image_url";
  text?: string;
  image_url?: {
    url: string;
  };
}

interface Message {
  role: "system" | "user" | "assistant" | "function";
  content: string | ContentItem[];
  name?: string;
  function_call?: {
    name: string;
    arguments: string;
  };
}

interface Props {
  messages: Message[];
  model?: string;
}

const { messages, model } = Astro.props;

function getContent(content: string | ContentItem[]): {
  text: string;
  images: string[];
} {
  if (typeof content === "string") return { text: content, images: [] };

  const images: string[] = [];
  const text = content
    .map((item) => {
      if (item.type === "image_url" && item.image_url) {
        images.push(item.image_url.url);
        return "";
      }
      return item.text || "";
    })
    .join("");

  return { text, images };
}
---

<section class="chat-section">
  <div class="chat-container">
    {
      messages.map((message, index) => (
        <div class={`message-column ${message.role}-column`}>
          <div class="label-column">
            <div class={`message-label ${message.role}-label`}>
              <span>
                {message.role === "assistant"
                  ? model || "Assistant"
                  : message.role.charAt(0).toUpperCase() +
                    message.role.slice(1)}
              </span>
            </div>
          </div>
          <div class="content-column">
            <div class={`message-content ${message.role}-content`}>
              <Markdown of={getContent(message.content).text} />
              {getContent(message.content).images.map((url) => (
                <img src={url} alt="" class="message-image" />
              ))}
            </div>
          </div>
        </div>
      ))
    }
  </div>
</section>

<style>
  .chat-section {
    --transition-speed: 300ms;
    overflow-x: auto;
    padding: 1rem 0;
  }

  .chat-container {
    --column-gap: 0.25rem;
    --label-width: 2rem;
    --content-width: 15rem;
    --column-radius: 0.5rem;

    display: flex;
    flex-direction: row;
    margin: 0 auto;
    font-family: var(--font-prose);
    height: max-content;
    gap: var(--column-gap);
  }

  .message-column {
    display: flex;
    flex-direction: row;
    height: auto;
  }

  .label-column {
    width: var(--label-width);
    flex-shrink: 0;
    height: auto;
    display: flex;
    margin-right: var(--column-gap);
  }

  .content-column {
    width: var(--content-width);
    flex-shrink: 0;
    height: auto;
  }

  .message-label {
    height: auto;
    display: flex;
    align-items: flex-start;
    justify-content: flex-end;
    writing-mode: vertical-rl;
    transform: rotate(180deg);
    padding: 1rem 0.25rem;
    font-size: var(--text-xs);
    font-weight: 500;
    border-radius: var(--column-radius);
    align-self: stretch;
  }

  .message-content {
    height: 100%;
    padding: 1rem;
    font-size: var(--text-sm);
    overflow-y: auto;
    border-radius: var(--column-radius);
  }

  .user-label {
    background: var(--color-ink-light);
    color: var(--color-bg);
  }

  .user-content {
    background: color-mix(
      in srgb,
      var(--color-ink-light) 90%,
      var(--color-bg) 10%
    );
    color: var(--color-bg);
  }

  .assistant-label {
    background: var(--color-bg-code);
    color: var(--color-ink);
    border: 1px solid var(--color-border);
  }

  .assistant-content {
    background: color-mix(
      in srgb,
      var(--color-bg-code) 90%,
      var(--color-bg) 10%
    );
    color: var(--color-ink);
    border: 1px solid var(--color-border);
  }

  .system-label {
    background: var(--color-bg-code);
    color: var(--color-ink-light);
    border: 1px solid var(--color-border);
  }

  .system-content {
    background: color-mix(
      in srgb,
      var(--color-bg-code) 90%,
      var(--color-bg) 10%
    );
    color: var(--color-ink-light);
    font-style: italic;
    border: 1px solid var(--color-border);
  }

  .message-image {
    margin-top: 0.5rem;
    max-width: 100%;
    max-height: 250px;
    object-fit: contain;
  }

  /* Ensure text colors respect dark mode */
  .user-content :global(p),
  .user-content :global(li),
  .user-content :global(h1),
  .user-content :global(h2),
  .user-content :global(h3),
  .user-content :global(h4),
  .user-content :global(h5),
  .user-content :global(h6) {
    color: var(--color-bg);
  }

  .assistant-content :global(p),
  .assistant-content :global(li),
  .assistant-content :global(h1),
  .assistant-content :global(h2),
  .assistant-content :global(h3),
  .assistant-content :global(h4),
  .assistant-content :global(h5),
  .assistant-content :global(h6) {
    color: var(--color-ink);
  }

  .system-content :global(p),
  .system-content :global(li),
  .system-content :global(h1),
  .system-content :global(h2),
  .system-content :global(h3),
  .system-content :global(h4),
  .system-content :global(h5),
  .system-content :global(h6) {
    color: var(--color-ink-light);
  }

  /* Ensure links in bubbles have appropriate colors */
  .user-content :global(a) {
    color: var(--color-bg);
    text-decoration: underline;
  }

  .assistant-content :global(a) {
    color: var(--color-link);
    text-decoration: underline;
  }

  .system-content :global(a) {
    color: var(--color-ink-light);
    text-decoration: underline;
  }

  /* Mobile styles */
  @media (max-width: 640px) {
    .chat-container {
      --content-width: 12rem;
    }
  }
</style>
